import { useCallback, useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";

import Input from "../components/Input";
import Setting from "../components/Setting";
import TimeProgress from "../components/TimeProgress";
import { Range, Unit } from "../utils/time";

import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const [symbol, setSymbol] = useState("");
  const [range, setRange] = useState<Range>("Hour");
  const [unit, setUnit] = useState<Unit>("Minute");

  const [init, setInit] = useState(false);
  useEffect(() => {
    const storageSymbol = window.localStorage.getItem("progressSymbol");
    const storageRange = window.localStorage.getItem("progressRange");
    const storageUnit = window.localStorage.getItem("progressUnit");
    if (storageSymbol) setSymbol(storageSymbol);
    if (storageRange) setRange(storageRange as Range);
    if (storageUnit) setUnit(storageUnit as Unit);
    setInit(true);
  }, []);

  const reset = useCallback(() => {
    window.localStorage.removeItem("progressSymbol");
    window.localStorage.removeItem("progressRange");
    window.localStorage.removeItem("progressUnit");
    setSymbol("");
    setRange("Hour");
    setUnit("Minute");
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Progress</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {!symbol && (
          <Input
            value={symbol}
            onChange={(s) => {
              window.localStorage.setItem("progressSymbol", s);
              setSymbol(s);
            }}
          />
        )}

        {symbol && (
          <div className={styles.progressContainer}>
            <div className={styles.symbol}>{symbol}</div>

            <TimeProgress
              className={styles.progress}
              range={range}
              unit={unit}
            />
          </div>
        )}

        <Setting
          alwaysShow={!Boolean(symbol) && init}
          className={styles.setting}
          range={range}
          unit={unit}
          onRangeChange={(r) => {
            window.localStorage.setItem("progressRange", r);
            setRange(r);
          }}
          onUnitChange={(u) => {
            window.localStorage.setItem("progressUnit", u);
            setUnit(u);
          }}
          onReset={reset}
        />
      </main>
    </div>
  );
};

export default Home;
